"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var path = require("path");
var fs = require("fs");
var includes = require("lodash.includes");
var partition = require("lodash.partition");
var loadCoverage = require('remap-istanbul/lib/loadCoverage');
var remap = require('remap-istanbul/lib/remap');
var writeReport = require('remap-istanbul/lib/writeReport');
var istanbulInstrument = require('istanbul-lib-instrument');
var pickBy = require("lodash.pickby");
var utils_1 = require("./utils");
var glob = require('glob-all');
function processResult(result) {
    var root = require('jest-util').getPackageRoot();
    var jestConfig = utils_1.getJestConfig(root).config;
    var sourceCache = {};
    var coveredFiles = [];
    var basepath = path.join(jestConfig.cacheDirectory, '/ts-jest/');
    if (!fs.existsSync(basepath)) {
        fs.mkdirSync(basepath);
    }
    var cachedFiles = fs.readdirSync(basepath);
    cachedFiles.map(function (p) {
        var filename = new Buffer(p.replace(basepath, ''), 'base64').toString('utf8');
        filename = root + filename;
        coveredFiles.push(filename);
        sourceCache[filename] = fs.readFileSync(path.join(basepath, p), 'ascii');
    });
    if (!jestConfig.testResultsProcessor)
        return result;
    if (jestConfig.coverageDirectory && jestConfig.coverageDirectory.startsWith(root)) {
        jestConfig.coverageDirectory = '.' + jestConfig.coverageDirectory.substr(root.length);
    }
    var coverageConfig = {
        collectCoverage: jestConfig.collectCoverage ? jestConfig.collectCoverage : true,
        coverageDirectory: jestConfig.coverageDirectory ? jestConfig.coverageDirectory : './coverage',
        coverageReporters: jestConfig.coverageReporters
    };
    var coverageCollectFiles = coverageConfig.collectCoverage &&
        jestConfig.testResultsProcessor &&
        jestConfig.collectCoverageFrom &&
        jestConfig.collectCoverageFrom.length ?
        glob.sync(jestConfig.collectCoverageFrom).map(function (x) { return path.resolve(root, x); }) : [];
    if (!coverageConfig.collectCoverage)
        return result;
    var coverage;
    try {
        coverage = [pickBy(result.coverageMap.data, function (_, fileName) { return includes(coveredFiles, fileName); })];
    }
    catch (e) {
        return result;
    }
    var uncoveredFiles = partition(coverageCollectFiles, function (x) { return includes(coveredFiles, x); })[1];
    var coverageOutputPath = path.join(coverageConfig.coverageDirectory || 'coverage', 'remapped');
    var emptyCoverage = uncoveredFiles.map(function (x) {
        var ret = {};
        if (sourceCache[x]) {
            var instrumenter = istanbulInstrument.createInstrumenter();
            instrumenter.instrumentSync(sourceCache[x], x);
            ret[x] = instrumenter.fileCoverage;
        }
        return ret;
    });
    var mergedCoverage = loadCoverage(coverage.concat(emptyCoverage), { readJSON: function (t) { return t ? t : {}; } });
    var coverageCollector = remap(mergedCoverage, {
        readFile: function (x) {
            var key = path.normalize(x);
            var source = sourceCache[key];
            delete sourceCache[key];
            return source;
        }
    });
    writeReport(coverageCollector, 'html', {}, path.join(coverageOutputPath, 'html'));
    writeReport(coverageCollector, 'lcovonly', {}, path.join(coverageOutputPath, 'lcov.info'));
    writeReport(coverageCollector, 'json', {}, path.join(coverageOutputPath, 'coverage.json'));
    writeReport(coverageCollector, 'text', {}, path.join(coverageOutputPath, 'coverage.txt'));
    return result;
}
module.exports = processResult;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY292ZXJhZ2Vwcm9jZXNzb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvY292ZXJhZ2Vwcm9jZXNzb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQkFBNkI7QUFDN0IsdUJBQXlCO0FBQ3pCLDBDQUE2QztBQUM3Qyw0Q0FBK0M7QUFDL0MsSUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLGlDQUFpQyxDQUFDLENBQUM7QUFDaEUsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLDBCQUEwQixDQUFDLENBQUM7QUFDbEQsSUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7QUFDOUQsSUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMseUJBQXlCLENBQUMsQ0FBQztBQUM5RCxzQ0FBeUM7QUFDekMsaUNBQXdDO0FBQ3hDLElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQXNCakMsdUJBQXVCLE1BQWM7SUFDbkMsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ25ELElBQU0sVUFBVSxHQUFHLHFCQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDO0lBQzlDLElBQUksV0FBVyxHQUFHLEVBQUUsQ0FBQztJQUNyQixJQUFJLFlBQVksR0FBRyxFQUFFLENBQUM7SUFFdEIsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ2pFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0IsRUFBRSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBQ0QsSUFBSSxXQUFXLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMz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