{"version":3,"file":"free-style.js","sourceRoot":"","sources":["../src/free-style.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * The unique id is used to get a unique hash on styles (no merging).\n */\nlet uniqueId = 0\n\n/**\n * Valid CSS property values.\n */\nexport type PropertyValue = null | undefined | number | boolean | string | Array<null | undefined | number | boolean | string>\n\n/**\n * User styles object.\n */\nexport interface Styles {\n  [selector: string]: PropertyValue | Styles\n}\n\n/**\n * Storing properties alphabetically ordered during parse.\n */\ntype Properties = Array<[string, PropertyValue]>\ntype NestedStyles = Array<[string, Styles]>\n\n/**\n * Tag styles with this string to get unique hash outputs.\n */\nexport const IS_UNIQUE = '__DO_NOT_DEDUPE_STYLE__'\n\n/**\n * CSS properties that are valid unit-less numbers.\n */\nconst CSS_NUMBER: { [propertyName: string]: boolean } = {\n  'animation-iteration-count': true,\n  'box-flex': true,\n  'box-flex-group': true,\n  'column-count': true,\n  'counter-increment': true,\n  'counter-reset': true,\n  'flex': true,\n  'flex-grow': true,\n  'flex-positive': true,\n  'flex-shrink': true,\n  'flex-negative': true,\n  'font-weight': true,\n  'line-clamp': true,\n  'line-height': true,\n  'opacity': true,\n  'order': true,\n  'orphans': true,\n  'tab-size': true,\n  'widows': true,\n  'z-index': true,\n  'zoom': true,\n  // SVG properties.\n  'fill-opacity': true,\n  'stroke-dashoffset': true,\n  'stroke-opacity': true,\n  'stroke-width': true\n}\n\n// Add vendor prefixes to all unit-less properties.\nfor (const prefix of ['-webkit-', '-ms-', '-moz-', '-o-']) {\n  for (const property of Object.keys(CSS_NUMBER)) {\n    CSS_NUMBER[prefix + property] = true\n  }\n}\n\n/**\n * Transform a JavaScript property into a CSS property.\n */\nfunction hyphenate (propertyName: string): string {\n  return propertyName\n    .replace(/([A-Z])/g, '-$1')\n    .replace(/^ms-/, '-ms-') // Internet Explorer vendor prefix.\n    .toLowerCase()\n}\n\n/**\n * Check if a property name should pop to the top level of CSS.\n */\nfunction isAtRule (propertyName: string): boolean {\n  return propertyName.charAt(0) === '@'\n}\n\n/**\n * Check if a value is a nested style definition.\n */\nfunction isNestedStyle (value: any): value is Styles {\n  return value != null && typeof value === 'object' && !Array.isArray(value)\n}\n\n/**\n * Hash algorithm interface.\n */\nexport type HashFunction = (str: string) => string\n\n/**\n * Generate a hash value from a string.\n */\nexport function stringHash (str: string): string {\n  let value = 5381\n  let i = str.length\n\n  while (i) {\n    value = (value * 33) ^ str.charCodeAt(--i)\n  }\n\n  return (value >>> 0).toString(36)\n}\n\n/**\n * Transform a style string to a CSS string.\n */\nfunction styleToString (key: string, value: string | number | boolean) {\n  if (typeof value === 'number' && value !== 0 && !CSS_NUMBER[key]) {\n    value = `${value}px`\n  }\n\n  return `${key}:${String(value)}`\n}\n\n/**\n * Sort an array of tuples by first value.\n */\nfunction sortTuples <T extends any[]> (value: T[]): T[] {\n  return value.sort((a, b) => a[0] > b[0] ? 1 : -1)\n}\n\n/**\n * Categorize user styles.\n */\nfunction parseStyles (styles: Styles, hasNestedStyles: boolean) {\n  const properties: Properties = []\n  const nestedStyles: NestedStyles = []\n  let isUnique = false\n\n  // Sort keys before adding to styles.\n  for (const key of Object.keys(styles)) {\n    const value = styles[key]\n\n    if (key === IS_UNIQUE) {\n      isUnique = !!value\n    } else if (isNestedStyle(value)) {\n      nestedStyles.push([key.trim(), value])\n    } else {\n      properties.push([hyphenate(key.trim()), value])\n    }\n  }\n\n  return {\n    properties: sortTuples(properties),\n    nestedStyles: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n    isUnique\n  }\n}\n\n/**\n * Stringify an array of property tuples.\n */\nfunction stringifyProperties (properties: Properties) {\n  const result: string[] = []\n\n  for (const [name, value] of properties) {\n    if (value != null) {\n      if (Array.isArray(value)) {\n        value.forEach(function (value) {\n          value && result.push(styleToString(name, value))\n        })\n      } else {\n        result.push(styleToString(name, value))\n      }\n    }\n  }\n\n  return result.join(';')\n}\n\n/**\n * Interpolate CSS selectors.\n */\nfunction interpolate (selector: string, parent: string) {\n  if (selector.indexOf('&') > -1) {\n    return selector.replace(/&/g, parent)\n  }\n\n  return `${parent} ${selector}`\n}\n\n/**\n * Recursive loop building styles with deferred selectors.\n */\nfunction stylize (cache: Cache<any>, selector: string, styles: Styles, list: [string, Style][], parent?: string) {\n  const { properties, nestedStyles, isUnique } = parseStyles(styles, !!selector)\n  const styleString = stringifyProperties(properties)\n  let pid = styleString\n\n  if (isAtRule(selector)) {\n    const rule = cache.add(new Rule(selector, parent ? undefined : styleString, cache.hash))\n\n    // Nested styles support (e.g. `.foo > @media > .bar`).\n    if (styleString && parent) {\n      const style = rule.add(new Style(styleString, rule.hash, isUnique ? `u${(++uniqueId).toString(36)}` : undefined))\n      list.push([parent, style])\n    }\n\n    for (const [name, value] of nestedStyles) {\n      pid += name + stylize(rule, name, value, list, parent)\n    }\n  } else {\n    const key = parent ? interpolate(selector, parent) : selector\n\n    if (styleString) {\n      const style = cache.add(new Style(styleString, cache.hash, isUnique ? `u${(++uniqueId).toString(36)}` : undefined))\n      list.push([key, style])\n    }\n\n    for (const [name, value] of nestedStyles) {\n      pid += name + stylize(cache, name, value, list, key)\n    }\n  }\n\n  return pid\n}\n\n/**\n * Register all styles, but collect for selector interpolation using the hash.\n */\nfunction composeStyles (container: Cache<Style | Rule>, selector: string, styles: Styles, isStyle: boolean, displayName?: string) {\n  const cache = new Cache<Rule | Style>(container.hash)\n  const list: [string, Style][] = []\n  const pid = stylize(cache, selector, styles, list)\n\n  const hash = `f${cache.hash(pid)}`\n  const id = displayName ? `${displayName}_${hash}` : hash\n\n  for (const [selector, style] of list) {\n    const key = isStyle ? interpolate(selector, `.${id}`) : selector\n    style.add(new Selector(key, style.hash, undefined, pid))\n  }\n\n  return { cache, pid, id }\n}\n\n/**\n * Get the styles string for a container class.\n */\nfunction getStyles (container: FreeStyle | Rule) {\n  return container.values().map(style => style.getStyles()).join('')\n}\n\n/**\n * Cacheable interface.\n */\nexport interface Container <T> {\n  id: string\n  clone (): T\n  getIdentifier (): string\n  getStyles (): string\n}\n\n/**\n * Implement a cache/event emitter.\n */\nexport class Cache <T extends Container<any>> {\n\n  changeId = 0\n\n  private _children: { [id: string]: T } = {}\n  private _keys: string[] = []\n  private _counters: { [id: string]: number } = {}\n\n  constructor (public hash: HashFunction) {}\n\n  values (): T[] {\n    return this._keys.map(x => this._children[x])\n  }\n\n  add <U extends T> (style: U): U {\n    const count = this._counters[style.id] || 0\n    const item = this._children[style.id] || style.clone()\n\n    this._counters[style.id] = count + 1\n\n    if (count === 0) {\n      this._keys.push(item.id)\n      this._children[item.id] = item\n      this.changeId++\n    } else {\n      // Check if contents are different.\n      if (item.getIdentifier() !== style.getIdentifier()) {\n        throw new TypeError(`Hash collision: ${style.getStyles()} === ${item.getStyles()}`)\n      }\n\n      this._keys.splice(this._keys.indexOf(style.id), 1)\n      this._keys.push(style.id)\n\n      if (item instanceof Cache && style instanceof Cache) {\n        const prevChangeId = item.changeId\n\n        item.merge(style)\n\n        if (item.changeId !== prevChangeId) {\n          this.changeId++\n        }\n      }\n    }\n\n    return item as U\n  }\n\n  remove (style: T): void {\n    const count = this._counters[style.id]\n\n    if (count > 0) {\n      this._counters[style.id] = count - 1\n\n      const item = this._children[style.id]\n\n      if (count === 1) {\n        delete this._counters[style.id]\n        delete this._children[style.id]\n        this._keys.splice(this._keys.indexOf(style.id), 1)\n        this.changeId++\n      } else if (item instanceof Cache && style instanceof Cache) {\n        const prevChangeId = item.changeId\n\n        item.unmerge(style)\n\n        if (item.changeId !== prevChangeId) {\n          this.changeId++\n        }\n      }\n    }\n  }\n\n  merge <U extends Cache<any>> (cache: U) {\n    for (const value of cache.values()) {\n      this.add(value)\n    }\n\n    return this\n  }\n\n  unmerge <U extends Cache<any>> (cache: U) {\n    for (const value of cache.values()) {\n      this.remove(value)\n    }\n\n    return this\n  }\n\n  clone () {\n    return new Cache(this.hash).merge(this)\n  }\n\n}\n\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\nexport class Selector implements Container<Selector> {\n\n  constructor (\n    public selector: string,\n    public hash: HashFunction,\n    public id = `s${hash(selector)}`,\n    public pid = ''\n  ) {}\n\n  getStyles () {\n    return this.selector\n  }\n\n  getIdentifier () {\n    return `${this.pid}.${this.selector}`\n  }\n\n  clone () {\n    return new Selector(this.selector, this.hash, this.id, this.pid)\n  }\n\n}\n\n/**\n * The style container registers a style string with selectors.\n */\nexport class Style extends Cache<Selector> implements Container<Style> {\n\n  constructor (public style: string, public hash: HashFunction, public id = `c${hash(style)}`) {\n    super(hash)\n  }\n\n  getStyles (): string {\n    return `${this.values().map(x => x.getStyles()).join(',')}{${this.style}}`\n  }\n\n  getIdentifier () {\n    return this.style\n  }\n\n  clone (): Style {\n    return new Style(this.style, this.hash, this.id).merge(this)\n  }\n\n}\n\n/**\n * Implement rule logic for style output.\n */\nexport class Rule extends Cache<Rule | Style> implements Container<Rule> {\n\n  constructor (\n    public rule: string,\n    public style = '',\n    public hash: HashFunction,\n    public id = `a${hash(`${rule}.${style}`)}`,\n    public pid = ''\n  ) {\n    super(hash)\n  }\n\n  getStyles (): string {\n    return `${this.rule}{${this.style}${getStyles(this)}}`\n  }\n\n  getIdentifier () {\n    return `${this.pid}.${this.rule}.${this.style}`\n  }\n\n  clone (): Rule {\n    return new Rule(this.rule, this.style, this.hash, this.id, this.pid).merge(this)\n  }\n\n}\n\n/**\n * The FreeStyle class implements the API for everything else.\n */\nexport class FreeStyle extends Cache<Rule | Style> implements Container<FreeStyle> {\n\n  constructor (public hash: HashFunction, public debug: boolean, public id = `f${(++uniqueId).toString(36)}`) {\n    super(hash)\n  }\n\n  registerStyle (styles: Styles, displayName?: string) {\n    const { cache, id } = composeStyles(this, '&', styles, true, this.debug ? displayName : undefined)\n    this.merge(cache)\n    return id\n  }\n\n  registerKeyframes (keyframes: Styles, displayName?: string) {\n    return this.registerHashRule('@keyframes', keyframes, displayName)\n  }\n\n  registerHashRule (prefix: string, styles: Styles, displayName?: string) {\n    const { cache, pid, id } = composeStyles(this, '', styles, false, this.debug ? displayName : undefined)\n    const rule = new Rule(`${prefix} ${id}`, undefined, this.hash, undefined, pid)\n    this.add(rule.merge(cache))\n    return id\n  }\n\n  registerRule (rule: string, styles: Styles) {\n    this.merge(composeStyles(this, rule, styles, false).cache)\n  }\n\n  registerCss (styles: Styles) {\n    this.merge(composeStyles(this, '', styles, false).cache)\n  }\n\n  getStyles () {\n    return getStyles(this)\n  }\n\n  getIdentifier () {\n    return this.id\n  }\n\n  clone (): FreeStyle {\n    return new FreeStyle(this.hash, this.debug, this.id).merge(this)\n  }\n\n}\n\n/**\n * Exports a simple function to create a new instance.\n */\nexport function create (hash = stringHash, debug = typeof process !== 'undefined' && process.env['NODE_ENV'] !== 'production') {\n  return new FreeStyle(hash, debug)\n}\n"]}